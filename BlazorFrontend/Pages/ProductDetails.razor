@page "/product/{id}"

<div class="container mt-5">
    <div class="d-flex justify-content-center align-items-center">
       
        <div class="m-4 card p-2 " style="height : 20rem">
            <h2>@Item.ProductName</h2>
            <p class="mt-2">@Item.ShortDescription</p>
            <p>@Item.LongDescription</p>
            <div class="">
                <h4>@Item.Price</h4>
                
                @if (Item.InStock)
                {
                    <span>
                        <i class="fas fa-cubes text-success font-weight-bold"></i>
                    </span>
                }
                else
                {
                    <span>
                        <i class="fas fa-cubes text-danger font-weight-bold"></i>
                    </span>
                }
               
            </div>
        </div>
        
        <img src="@Item.ImgUrl" alt="Alternate Text" style="height: 20rem" />
        

    </div>
    <button class="btn btn-secondary">ADD TO CART</button>
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    public Product Item { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        Item = await Http.GetFromJsonAsync<Product>($"https://localhost:44398/api/Products/{Id}");
    }
}
